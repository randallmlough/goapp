{{ reserveImport "github.com/pkg/errors" }}

func New(message string) error {
	return errors.New(message)
}

func Wrap(err error, message string) error {
	return errors.Wrap(err, message)
}

func WithMessage(err error, message string) error {
	return errors.WithMessage(err, message)
}

func Cause(err error) error {
	return errors.Cause(err)
}

func Unwrap(err error) error {
	return errors.Unwrap(err)
}

func As(err error, target interface{}) bool {
	return errors.As(err, target)
}

func Is(err error, target error) bool {
	return errors.Is(err, target)
}

func parseErrors(errs ...error) []string {
	errMsgs := []string{}
	for _, err := range errs {
		if ae, ok := err.(AppError); ok {
			errMsgs = append(errMsgs, ae.Public())
		}
	}
	return errMsgs
}
